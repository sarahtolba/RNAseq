# Script to perform differential gene expression analysis using DESeq2 package

# Load necessary libraries
library(tidyverse)
library(DESeq2)
library(GEOquery)
library(dplyr)

# Load count data from CSV file
countmatrix = read.csv("../Desktop/GSE296967_raw_counts_All_samples.csv", head = TRUE)

# 1- Prepare count data and metadata
# Download GEO dataset and extract metadata
gse <- getGEO("GSE296967", GSEMatrix = TRUE)
gse

metadata <- pData(phenoData(gse[[1]]))
head(metadata)
view(metadata)

# Select relevant metadata columns and rename one column for clarity
modified.meta <- metadata %>%
  select(1, 45) %>%
  rename(`cd105_expression` = `cd105 expression:ch1`)

# Set rownames for countmatrix and adjust column names to match metadata
rownames(countmatrix) = countmatrix$x
countmatrix = countmatrix[,-1]

colnames(countmatrix) = row.names(modified.meta)

# Confirm that column names in countmatrix and row names in metadata match
all(colnames(countmatrix) %in% rownames(modified.meta))
all(colnames(countmatrix) == rownames(modified.meta))

# 2- Create DESeq2 dataset object
dds = DESeqDataSetFromMatrix(countData = countmatrix,
                             colData = modified.meta,
                             design = ~ cd105_expression)
dds

# Filter out genes with low counts (keep genes with at least 10 total reads)
keep <- rowSums(counts(dds)) >= 10
dds <- dds[keep,]
dds

# Specify reference level for the factor (control group)
dds$cd105_expression <- relevel(dds$cd105_expression, ref = "negative")

# 3- Run differential expression analysis
dds = DESeq(dds)
res = results(dds)
res
view(res)

# Note: No need to collapse technical replicates since samples are biological replicates

# Summarize results
summary(res)

# Obtain results with adjusted p-value cutoff of 0.01
res = results(dds, alpha = 0.01)

# Check available results names (contrasts)
resultsNames(dds)

# Generate MA plot of results
plotMA(res)


#Volcano plot of DE genes
EnhancedVolcano(res, lab = data$gene, x = 'log2FoldChange', y = 'pvalue')
